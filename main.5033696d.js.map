{"version":3,"sources":["scripts/main.js"],"names":["showNotification","message","type","notification","document","createElement","setAttribute","classList","add","textContent","body","appendChild","setTimeout","style","transform","remove","firstPromise","Promise","resolve","reject","timer","Error","addEventListener","evt","button","clearTimeout","secondPromise","e","preventDefault","leftClicked","rightClicked","thirdPromise","checkClickedButtons","then","catch"],"mappings":";AAAA,aAGA,SAASA,EAAiBC,EAASC,GAC3BC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,aAAa,UAAW,gBACrCH,EAAaI,UAAUC,IAAIN,GAC3BC,EAAaM,YAAcR,EAC3BG,SAASM,KAAKC,YAAYR,GAE1BS,WAAW,WACTT,EAAaU,MAAMC,UAAY,qBAC/BF,WAAW,WAAMT,OAAAA,EAAaY,UAAU,MACvC,KAGL,IAAMC,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACnCC,IAAAA,EAAQR,WAAW,WACvBO,EAAO,IAAIE,MAAM,gCAChB,KAEHjB,SAASkB,iBAAiB,QAAS,SAACC,GACf,IAAfA,EAAIC,SACNC,aAAaL,GACbF,EAAQ,mCAKRQ,EAAgB,IAAIT,QAAQ,SAACC,GACjCd,SAASkB,iBAAiB,QAAS,WACjCJ,EAAQ,iCAGVd,SAASkB,iBAAiB,cAAe,SAACK,GACxCA,EAAEC,iBAEFV,EAAQ,mCAIRW,GAAc,EACdC,GAAe,EAEbC,EAAe,IAAId,QAAQ,SAACC,GAChCd,SAASkB,iBAAiB,QAAS,SAACK,GACjB,IAAbA,EAAEH,SACJK,GAAc,GAGC,IAAbF,EAAEH,SACJM,GAAe,GAGXE,IAAAA,EAAsB,WACtBH,GAAeC,GACjBZ,EAAQ,+BAIZd,SAASkB,iBAAiB,QAAS,WACjCO,GAAc,EAEdG,MAGF5B,SAASkB,iBAAiB,cAAe,SAACC,GACxCA,EAAIK,iBACJE,GAAe,EACfE,UAKNhB,EACGiB,KAAK,SAAChC,GACLD,EAAiBC,EAAS,aAE3BiC,MAAM,SAACjC,GACND,EAAiBC,EAAS,WAG9ByB,EAAcO,KAAK,SAAChC,GAClBD,EAAiBC,EAAS,aAG5B8B,EAAaE,KAAK,SAAChC,GACjBD,EAAiBC,EAAS","file":"main.5033696d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// solution\nfunction showNotification(message, type) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add(type);\n  notification.textContent = message;\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.style.transform = 'translateY(-100px)';\n    setTimeout(() => notification.remove(), 300);\n  }, 3000);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const timer = setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n\n  document.addEventListener('click', (evt) => {\n    if (evt.button === 0) {\n      clearTimeout(timer);\n      resolve('First promise was resolved');\n    }\n  });\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    resolve('Second promise was resolved');\n  });\n});\n\nlet leftClicked = false;\nlet rightClicked = false;\n\nconst thirdPromise = new Promise((resolve) => {\n  document.addEventListener('click', (e) => {\n    if (e.button === 0) {\n      leftClicked = true;\n    }\n\n    if (e.button === 2) {\n      rightClicked = true;\n    }\n\n    const checkClickedButtons = () => {\n      if (leftClicked && rightClicked) {\n        resolve('Third promise was resolved');\n      }\n    };\n\n    document.addEventListener('click', () => {\n      leftClicked = true;\n\n      checkClickedButtons();\n    });\n\n    document.addEventListener('contextmenu', (evt) => {\n      evt.preventDefault();\n      rightClicked = true;\n      checkClickedButtons();\n    });\n  });\n});\n\nfirstPromise\n  .then((message) => {\n    showNotification(message, 'success');\n  })\n  .catch((message) => {\n    showNotification(message, 'error');\n  });\n\nsecondPromise.then((message) => {\n  showNotification(message, 'success');\n});\n\nthirdPromise.then((message) => {\n  showNotification(message, 'success');\n});\n"]}